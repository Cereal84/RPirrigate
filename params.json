{"name":"Rpirrigate","tagline":"Raspberry Pi irrigation system software","body":"### Welcome to RPirrigate page.\r\nRPirrigate lets you use your Raspberry Pi (any model) to irrigate your garden. Forget about needing to go outside, with a lot of mosquitoes, just to irrigate your plants. With RPirrigate you can set up your custom irrigation plan using an awesome web interface and it will do everything for you.\r\n\r\n### Hardware\r\nThe required hardware is as few as possible. You just need to connect idraulic valves to the GPIOs using some relays. There are a lot of guides online so I won't talk about this again.\r\n\r\n### The Idea\r\nThe program is based on modules. Every modules is pratically a idraulic valve, theorically a set of plants which require irrigation together. For example if you have 5 apple trees, you can connect them to only one module.\r\nEvery module has got an irrigation plan, which is a set of events. Every event tells RPirrigate to irrigate every X days at hour X (e.g. irrigate every day at 19.30). Every module may also manually be switched on or off, in order to allow you to test the system (or just to give more water!).\r\n\r\n### The Rain\r\nObviously, when it rains, you should't irrigate! RPirrigate uses some weather APIs to fetch the weather and will delay all events if it rains. Never waste water anymore!\r\n\r\n### Technical aspects\r\nThe program is based on two parts: one daemon and a web interface.\r\nThe daemon is written in Python, using OOP paradigm and optimized for the low-performarce Raspberry Pi. So It does what It needs only when it really needs it!\r\nThe web interface is written in PHP and uses a customized version of lighttpd web server listening on port 883.\r\nWeb interface and daemon communicate using a MySQL database. The web interface sends unix signals to the daemon when it has to reload things from the database, so everything is optimized and there is no useless access to the database.\r\n\r\n### Installation\r\nThe aim of the installation is to be as easy as possible, so I decided to use a chef cookbook to do that.\r\nif you don't know what chef is, I suggest you to read about it, because it's awesome. (In short, it helps you to install and configure servers)\r\nSo, to install RPirrigate follow these steps on your Raspberry Pi:\r\n1. Install chef. When asking for the chef server, just hit enter. Once installed it will give an error about the chef server. Don't care about it, for how we use chef it is ok.\r\n```\r\n$ sudo apt-get install -y chef\r\n```\r\n2. Download the chef recipe from my website, decompress it and go inside the directory\r\n```\r\n$ wget http://bobvann.noip.me/repo/rpirrigate/rpirrigate-chef.tar.gz\r\n$ tar zxf rpirrigate-chef.tar.gz\r\n$ cd rpirrigate-chef\r\n```\r\n3. Execute the chef cookbook. This may take a while because it has to install everything, compile PIGPIO etc.\r\n```\r\n$ sudo chef-solo -c solo.rb\r\n```\r\n4. Post-installation\r\nIt should now be installed. You can go with your browser to http://<rpi ip>:883\r\nYou can login using default credentials admin/admin. Once logged in, please go to Settings and set up the location for the weather. I suggest you to change access credentials too.\r\n\r\n\r\n### License\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}